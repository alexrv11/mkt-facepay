module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 58);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("classnames");

/***/ }),

/***/ 58:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(59);


/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(60),
    Button = _require.Button,
    ButtonText = _require.ButtonText;

/**
 * Export Button as default, and ButtonText as named export
 */


module.exports = Button;
exports = module.exports;
exports.ButtonText = ButtonText;

/***/ }),

/***/ 60:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Component dependencies
 */
var React = __webpack_require__(0);
var PropTypes = __webpack_require__(1);
var classNames = __webpack_require__(2);

/**
 * Button text component
 *  Utility component only to be used when Button content
 *  includes more than just text (could be an icon or spinner)
 */

var ButtonText = function ButtonText(_ref) {
  var children = _ref.children;
  return React.createElement(
    'span',
    {
      className: 'andes-button__text'
    },
    children
  );
};

ButtonText.propTypes = {
  children: PropTypes.node.isRequired
};

/**
 * Button component
 */
var Button = function Button(_ref2) {
  var className = _ref2.className,
      children = _ref2.children,
      size = _ref2.size,
      modifier = _ref2.modifier,
      href = _ref2.href,
      type = _ref2.type,
      disabled = _ref2.disabled,
      loading = _ref2.loading,
      onClick = _ref2.onClick,
      props = _objectWithoutProperties(_ref2, ['className', 'children', 'size', 'modifier', 'href', 'type', 'disabled', 'loading', 'onClick']);

  var isDisabled = disabled || loading;

  var classes = classNames('andes-button', 'andes-button--' + modifier, className, size === 'small' && 'andes-button--small', isDisabled && 'andes-button--disabled');

  var sharedProps = _extends({
    className: classes,
    disabled: isDisabled,
    onClick: onClick
  }, props);

  var content = React.createElement(
    'span',
    {
      className: 'andes-button__content'
    },
    children
  );

  return href ? React.createElement(
    'a',
    _extends({
      role: 'button',
      href: href
    }, sharedProps, {
      onClick: onClick
    }),
    content
  ) : React.createElement(
    'button',
    _extends({
      type: type
    }, sharedProps, {
      onClick: onClick
    }),
    content
  );
};

/**
 * Prop types
 */
Button.propTypes = {
  children: PropTypes.node.isRequired,
  className: PropTypes.string,
  disabled: PropTypes.bool,
  href: PropTypes.string,
  loading: PropTypes.bool,
  modifier: PropTypes.oneOf(['filled', 'outline', 'transparent', 'white', 'link']),
  size: PropTypes.oneOf(['small', 'large']),
  type: PropTypes.string,
  onClick: PropTypes.func
};

Button.defaultProps = {
  className: '',
  disabled: false,
  href: '',
  loading: false,
  modifier: 'filled',
  size: 'large',
  type: 'button',
  onClick: null
};

/**
 * Export both components
 */
module.exports = {
  Button: Button,
  ButtonText: ButtonText
};

/***/ })

/******/ });